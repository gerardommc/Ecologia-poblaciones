col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.12
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.01
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.05
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N <- matrix(0, ncol = 100, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:ncol(N)){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
plot(1:ncol(N), N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
ncol(N)
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:ncol(N), N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:ncol(N), N.df[,i], col = "grey", lwd = 1)
lines(1:ncol(N), N.m)
set.seed(123)
wt <- exp(rnorm(28, 0.025, 2))
r <-  wt^runif(28, 0.6, 0.8)/exp(rnorm(28, 0, 1))
df <- data.frame(Spp = 1:28, Masa = wt, r = r)
plot(r, wt)
dat <- read.csv("Scripts-R/Escalamiento-alometrico.csv")
View(dat)
m1 <- lm(r ~ masa, data = dat)
m1 <- lm(r ~ Masa, data = dat)
m1
summary(m1)
set.seed(123)
wt <- exp(rnorm(28, 0.025, 2))
wt
r <-  wt^runif(28, 0.6, 0.8)/exp(rnorm(28, 0, 1))
df <- data.frame(Spp = 1:28, Masa = wt, r = r)
r
plot(log(dat$Masa), log(dat$r))
m1 <- lm(log(r) ~ log(Masa), data = dat)
summary(m1)
plot(m1)
summary(m1)
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
x
y
set.seed(678)
x[1] <- runif(1); y[1] <- runif(1)
x; y
x[1] <- runif(1); y[1] <- runif(1)
x[1] <- runif(1); y[1] <- runif(1)
x;y
x[1] <- runif(1); y[1] <- runif(1)
x;y
x[1] <- runif(1); y[1] <- runif(1)
x;y
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
for(i in 2:50){
x[i] <- x[i-1] + runif(1, -1, 1)
y[i] <- y[i-1] + rnorm(1, 1, 4)
}
x
y
x
y
class(x)
class(y)
tabla <- data.frame(x = x, y = y)
View(tabla)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
for(i in 2:50){
x[i] <- x[i-1] + runif(1, -1, 1)
y[i] <- y[i-1] + rnorm(1, 0, 4)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
for(i in 2:50){
x[i] <- x[i-1] + runif(1, -1, 1)
y[i] <- y[i-1] + runif(1, -1, 1)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
for(i in 2:100){
x[i] <- x[i-1] + runif(1, -1, 1)
y[i] <- y[i-1] + runif(1, -1, 1)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
for(i in 2:100){
x[i] <- x[i-1] + runif(1, -1, 1)
y[i] <- y[i-1] + rnorm(1, 0, 1)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
for(i in 2:100){
x[i] <- x[i-1] + rnorm(1, 0, 1)
y[i] <- y[i-1] + rnorm(1, 0, 1)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
c <- 0.2; e <- 0.05
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 200
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
c <- 0.05; e <- 0.2
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 200
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
c <- 0.05; e <- 0.05
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 200
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
tiempo <- 1000
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
image(matrix(K, 3, 3))
image(matrix(K, 3, 3))
neigh <- matrix(c(0, 1, 0, 1, rep(0, 5),
1, 0, 1, 0, 1, rep(0, 4),
0, 1, 0, 0, 0, 1, rep(0, 3),
1, 0, 0, 0, 1, 0, 1, 0, 1,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 0,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(1, rep(0, n.pob-1))
N0
time = 25
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
range(N)
plot(1:time, N[1, ], type = "l", ylim = c(0, 9))
for(i in 2:9){lines(1:time, N[i,], col = "grey")}
library(animation)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
)
getwd()
A <- as.matrix(read.csv("Scripts-R/Silene-matriz.csv"))
tiempo = 10
A
View(A)
N
N <- matrix(0, nrow = 6, ncol = tiempo)
View(N)
View(N)
N0 <- c(0, 0, 0, 5, 5, 5)
N[, 1] <- N0
View(N)
for(i in 2:tiempo){
a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
n <-  a %*% N[, i-1]
N[, i] <- sapply(n, function(x){rpois(1, x)})
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
for(i in 2:tiempo){
a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
n <-  a %*% N[, i-1]
N[, i] <- sapply(n, function(x){rpois(1, x)})
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
for(i in 2:tiempo){
a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
n <-  a %*% N[, i-1]
N[, i] <- sapply(n, function(x){rpois(1, x)})
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
set.seed(183)
for(i in 2:tiempo){
a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
n <-  a %*% N[, i-1]
N[, i] <- sapply(n, function(x){rpois(1, x)})
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
eigen(A)
r <- 0.1; mig = 0.05; M <- 10
n.pob <- 9
K <- rpois(n.pob, 15)
image(matrix(K, 3, 3))
image(matrix(K, 3, 3))
K
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
n.neigh
N0 <- rpois(9, 10)
N0
time = 500
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
plot(1:time, N[1, ], type = "l", ylim = c(0, 50))
for(i in 2:9){lines(1:time, N[i, ], col = "grey")}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
K
r <- 0.025; K <- 40; M <- 5
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 100, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:ncol(N)){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:ncol(N), N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
plot(1:ncol(N), N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:ncol(N), N.df[,i], col = "grey", lwd = 1)
lines(1:ncol(N), N.m)
simulacion <- function(n.ad = NA, n.juv = NA, nac = 0.5, p.juv = 0.5, mort.juv = 0.25, mort.ad = 0.1){
inc.juv  <-  rpois(1, n.ad * nac)
dec.juv <- - rpois(1, (p.juv + mort.juv) * n.juv)
inc.ad <- rpois(1, p.juv * n.juv)
dec.ad <- - rpois(1, mort.ad * n.ad)
return(list(blancos = inc.juv - dec.juv,
oscuros = inc.ad - dec.ad))
}
source("Unidad-2/simulacion.R")
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
source("Unidad-2/simulacion.R")
simulacion(n.ad = 80, n.juv = 40)
return(list(blancos = inc.juv - dec.juv,
oscuros = inc.ad - dec.ad))
simulacion <- function(n.ad = NA, n.juv = NA, nac = 0.1, p.juv = 0.5, mort.juv = 0.25, mort.ad = 0.1){
inc.juv  <-  rpois(1, n.ad * nac)
dec.juv <- rpois(1, (p.juv + mort.juv) * n.juv)
inc.ad <- rpois(1, p.juv * n.juv)
dec.ad <- rpois(1, mort.ad * n.ad)
return(list(blancos = inc.juv - dec.juv,
oscuros = inc.ad - dec.ad))
}
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion <- function(n.ad = NA, n.juv = NA, nac = 0.25, p.juv = 0.5, mort.juv = 0.25, mort.ad = 0.1){
inc.juv  <-  rpois(1, n.ad * nac)
dec.juv <- rpois(1, (p.juv + mort.juv) * n.juv)
inc.ad <- rpois(1, p.juv * n.juv)
dec.ad <- rpois(1, mort.ad * n.ad)
return(list(blancos = inc.juv - dec.juv,
oscuros = inc.ad - dec.ad,
total.blancos = n.juv + inc.juv - dec.juv,
total.oscuros = n.ad + inc.ad - dec.ad))
}
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 80, n.juv = 40)
simulacion(n.ad = 12, n.juv = 92)
simulacion <- function(n.juv = NA, n.ad = NA, nac = 0.25, p.juv = 0.5, mort.juv = 0.25, mort.ad = 0.1){
inc.juv  <-  rpois(1, n.ad * nac)
dec.juv <- rpois(1, (p.juv + mort.juv) * n.juv)
inc.ad <- rpois(1, p.juv * n.juv)
dec.ad <- rpois(1, mort.ad * n.ad)
return(list(d.juv = inc.juv - dec.juv,
d.ad = inc.ad - dec.ad,
total.juv = n.juv + inc.juv - dec.juv,
total.ad = n.ad + inc.ad - dec.ad))
}
simulacion(n.juv = 40, n.ad = 80)
simulacion(n.juv = 35, n.ad = 101)
simulacion(n.juv = 30, n.ad = 107)
