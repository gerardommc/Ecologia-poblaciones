N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
r <- 0.5; mig = 0.15; M <- 10
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
r <- 0.5; mig = 0.15; M <- 5
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
r <- 0.5; mig = 0.15; M <- 2
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
r <- 0.025; K <- 30; M <- 15
N0 <- c(5)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N0 <- c(15)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
n.neigh
r <- 0.5; mig = 0.15; M <- 10
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
r <- 0.5; mig = 0.15; M <- 10
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 30)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
K
image(matrix(K, 3, 3))
r <- 0.5; mig = 0.25; M <- 10
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 30)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
r <- 0.1; mig = 0.25; M <- 10
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 30)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(15, rep(0, n.pob-1))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, rep(0, 5),
1, 0, 1, 0, 1, rep(0, 4),
0, 1, 0, 0, 0, 1, rep(0, 3),
1, 0, 0, 0, 1, 0, 1, 0, 1,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 0,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- c(1, rep(0, n.pob-1))
time = 25
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
library(animation)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:25, N[i, ], type = "l", main = i)
)
r <- 0.1; mig = 0.25; M <- 10
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 30)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- rpois(9, 15)
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
N0 <- rpois(9, 10)
N0
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
r <- 0.1; mig = 0.25; M <- 5
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 30)
image(matrix(K, 3, 3))
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- rpois(9, 10)
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
K
K <- round(rnorm(n.pob, 30, 10))
K
K <- round(rnorm(n.pob, 30, 15))
K
K <- round(rnorm(n.pob, 30, 12))
K
r <- 0.1; mig = 0.25; M <- 5
set.seed(123)
n.pob <- 9
K <- round(rnorm(n.pob, 30, 12))
image(matrix(K, 3, 3))
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- round(rnorm(9, mean = 7, sd = 3))
N0
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
image(matrix(K, 3, 3))
r <- 0.1; mig = 0.05; M <- 5
set.seed(123)
n.pob <- 9
K <- round(rnorm(n.pob, 30, 12))
image(matrix(K, 3, 3))
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- round(rnorm(9, mean = 7, sd = 3))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
A <- read.csv("Scripts-R/Silene-matriz.csv")
N[, 1] <- N0
A <- read.csv("Scripts-R/Silene-matriz.csv")
N <- matrix(0, nrow = 6, ncol = 100)
N0 <- c(0, 0, 0, 5, 5, 5)
N[, 1] <- N0
N[, 1]
N
for(i in 2:25){
N[, i] <- A %*%N [, i-1]
}
A <- as.matrix(read.csv("Scripts-R/Silene-matriz.csv"))
for(i in 2:25){
N[, i] <- A %*%N [, i-1]
}
N.df <- data.frame(t(N))
N.df
tiempo = 100
N <- matrix(0, nrow = 6, ncol = tiempo)
N0 <- c(0, 0, 0, 5, 5, 5)
N[, 1] <- N0
for(i in 2:tiempo){
N[, i] <- A %*%N [, i-1]
}
N.df <- data.frame(t(N))
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
names(N.m)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
tiempo = 20
N <- matrix(0, nrow = 6, ncol = tiempo)
N0 <- c(0, 0, 0, 5, 5, 5)
N[, 1] <- N0
for(i in 2:tiempo){
N[, i] <- A %*% N[, i-1]
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
