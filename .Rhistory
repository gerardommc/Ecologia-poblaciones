a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
N[, i] <- a %*% N[, i-1]
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
for(i in 2:tiempo){
a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
N[, i] <- a %*% N[, i-1]
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
for(i in 2:tiempo){
a <- A
a[] <- sapply(A[], function(x){rnorm(1, x, sd = x/4)})
a[] <- ifelse(a[] < 0, 0, a[])
n <-  a %*% N[, i-1]
N[, i] <- sapply(n, function(x){rpois(1, x)})
}
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5", "N6")
N.df$Tiempo <- 1:tiempo
N.m <- reshape2::melt(N.df, id.vars = "Tiempo")
library(ggplot2)
ggplot(N.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
r <- 0.1; mig = 0.05; M <- 5
set.seed(123)
n.pob <- 9
K <- round(rnorm(n.pob, 30, 12))
image(matrix(K, 3, 3))
neigh <- matrix(c(0, 1, 0, 1, 0, 0, 0, 0, 0,
1, 0, 1, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
1, 0, 0, 0, 1, 0, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 1, 0, 1, 0),
nrow = 9, ncol = 9)
image(neigh)
n.neigh <- rowSums(neigh)
N0 <- round(rnorm(9, mean = 5, sd = 3))
time = 250
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
dt = 0.1
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + (r * N[, i-1] * (1- N[, i-1]/K) * (N[, i-1] - M) - E + I) * dt
}
library(animation)
saveGIF(
for(i in 1:9)plot(1:time, N[i, ], type = "l", main = i)
)
saveGIF(
for(i in seq(1, 250, by = 10)){image(matrix(N[, i], 3, 3), main = i)}
)
for(i in 2:50){
N[i] <- N[i-1] + r*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
c <- 0.1; e <- 0.1
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 50
for(i in 2:50){
N[i] <- N[i-1] + r*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
c <- 0.1; e <- 0.1
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 50
for(i in 2:50){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
c <- 0.1; e <- 0.05
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 50
for(i in 2:50){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
tiempo <- 100
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
tiempo <- 200
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
c <- 0.2; e <- 0.05
N <- c()
N0 <- 0.1
N[1] <- N0
tiempo <- 200
for(i in 2:tiempo){
N[i] <- N[i-1] + c*N[i-1] * (1 - N[i-1]) - e*N[i-1]
}
plot(1:tiempo, N, type = "l")
r <- 0.025; K <- 40; M <- 15
c <- 4
N0 <- 20
r <- 0.025; K <- 40; M <- 15
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
N[i, t] <- n + r*n*(1-n/K[j])*(n-M) - C
}
}
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
N[i, t] <- n + r*n*(1-n/K)*(n-M) - C
}
}
warnings()
N
r <- 0.025; K <- 40; M <- 15
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
r <- 0.025; K <- 40; M <- 5
c <- 0.05
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.15
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.2
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
r <- 0.025; K <- 40; M <- 5
c <- 0.25
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
r <- 0.025; K <- 40; M <- 5
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.2
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N <- matrix(0, ncol = 50, nrow = 1000)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.12
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.01
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.05
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
c <- 0.1
N0 <- 20
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:50){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N <- matrix(0, ncol = 100, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 2:ncol(N)){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
while((n + dN) < 0){
n <- rpois(1, N[i, t-1])  # Tau leap
C <- rpois(1, c * N[i, t-1])
dN <- r*n*(1-n/K)*(n-M) - C
}
N[i, t] <- n + dN
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
plot(1:ncol(N), N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
ncol(N)
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:ncol(N), N.df[,1], type = "l", ylim = c(0, 45),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:ncol(N), N.df[,i], col = "grey", lwd = 1)
lines(1:ncol(N), N.m)
