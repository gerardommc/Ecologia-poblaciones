library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
r <- 0.025; K <- 30; M <- 15
N0 <- c(10, 20)
N <- matrix(0, ncol = 50, nrow = 2)
N[, 1] <- N0
N0 <- c(15)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
plot(1:50, N.df[1], type = "l", ylim = c(0, 30),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 2,
col = "grey")
plot(1:50, N.df[,1], type = "l", ylim = c(0, 30),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 2,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 2)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 50),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
N.m <- rowMeans(N.df)
lines(1:50, N.m)
N0 <- c(16)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N0 <- c(17)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N0 <- c(18)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N0 <- c(25)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N0 <- c(10)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N0 <- c(5)
N <- matrix(0, ncol = 50, nrow = 100)
N0 <- c(5)
N <- matrix(0, ncol = 50, nrow = 100)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
N <- matrix(0, ncol = 50, nrow = 1000)
N[, 1] <- N0
for(i in 1:nrow(N)){
for(t in 1:49){
n <- rpois(1, N[i, t])
N[i, t+1] <- n + r*n*(1-n/K)*(n-M)
}
}
N.df <- data.frame(t(N))
N.m <- rowMeans(N.df)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:50)lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
plot(1:50, N.df[,1], type = "l", ylim = c(0, 35),
xlab = "Tiempo", ylab = "N", cex.axis = 2, lwd = 1,
col = "grey")
for(i in 2:nrow(N))lines(1:50, N.df[,i], col = "grey", lwd = 1)
lines(1:50, N.m)
x <- c(); y <- c()
set.seed(123)
x[1] <- runif(1); y[1] <- runif(1)
for(i in 2:50){
x[i] <- x[i-1] + runif(1, -1, 1)
y[i] <- y[i-1] + rnorm(1, 1, 4)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
for(i in 2:50){
x[i] <- x[i-1] + runif(1, 0, 1)
y[i] <- y[i-1] + rnorm(1, 1, 4)
}
tabla <- data.frame(x = x, y = y)
library(ggplot2)
ggplot(tabla) + geom_path(aes(x = x, y = y))
Metap <- matrix(rpois(9, 5), nrow = 3, ncol = 3)
image(Metap)
image(Metap)
neigh <- diag(9)
neigh
length(Metap)
for (i in 1:(length(Metap)-1)) {
for(j in 1:(length(Metap)-1)){
neigh[i+1, j+1] <-
}
neigh <- diag(9)
for (i in 1:(length(Metap)-1)) {
for(j in 1:(length(Metap)-1)){
neigh[i+1, j] <- 1
neigh[i, j+1] <- 1
}
}
image(neigh)
neigh <- diag(9)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 1
neigh[i, i+1] <- 1
}
image(neigh)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 0.5
neigh[i, i+1] <- 0.5
}
image(neigh)
N0 <- c(1, rep(0, 8))
N0
N[1, ] <- N0
N0 <- c(1, rep(0, 8))
time = 25
N <- matrix(0, nrow = 9, ncol = time)
N[1, ] <- N0
N[, 1] <- N0
N
neigh <- matrix(0, 9, 9)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 0.5
neigh[i, i+1] <- 0.5
}
image(neigh)
K <- matrix(rpois(9, 5), nrow = 3, ncol = 3)
image(K)
set.seed(123)
K <- matrix(rpois(9, 5), nrow = 3, ncol = 3)
image(K)
neigh <- matrix(0, 9, 9)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 0.5
neigh[i, i+1] <- 0.5
}
image(neigh)
set.seed(123)
K <- rpois(9, 5)
image(matrix(K, 3, 3))
neigh <- matrix(0, 9, 9)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 0.5
neigh[i, i+1] <- 0.5
}
image(neigh)
N0 <- c(1, rep(0, 8))
time = 25
N <- matrix(0, nrow = 9, ncol = time)
N[, 1] <- N0
r <- 0.1; immi = 0.1; emi = 0.15
set.seed(123)
K <- rpois(9, 5)
image(matrix(K, 3, 3))
neigh <- matrix(0, 9, 9)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 0.5
neigh[i, i+1] <- 0.5
}
image(neigh)
N0 <- c(1, rep(0, 8))
time = 25
N <- matrix(0, nrow = 9, ncol = time)
N[, 1] <- N0
for(i in 2:time){
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) + N[, i-1] %*% neigh *(immi - emi)
}
for(i in 1:time){image(matrix(N[, i], 3, 3))}
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 1
neigh[i, i+1] <- 1
}
r <- 0.1; immi = 0.1; emi = 0.15
set.seed(123)
K <- rpois(9, 5)
image(matrix(K, 3, 3))
neigh <- matrix(0, 9, 9)
for (i in 1:(length(Metap)-1)) {
neigh[i+1, i] <- 1
neigh[i, i+1] <- 1
}
image(neigh)
N0 <- c(1, rep(0, 8))
time = 25
N <- matrix(0, nrow = 9, ncol = time)
N[, 1] <- N0
for(i in 2:time){
E <- N[, i-1] * emi
I <- E %*% neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
install.packages("animation")
install.packages("animation")
install.packages("animation")
library(animation)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
)
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
neigh <- matrix(0, n.pob, n.pob)
for (i in 1:(length(K)-1)) {
neigh[i+1, i] <- 1
neigh[i, i+1] <- 1
}
n.neigh <- rowSums(neigh) + colSums(neigh)
N0 <- c(1, rep(0, n.pob-1))
time = 25
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
library(animation)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
)
plot(1:25, N[7, ], type = "l")
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
K
image(matrix(K, 3, 3))
neigh <- matrix(0, n.pob, n.pob)
neigh <- matrix(0, n.pob, n.pob)
neigh
for (i in 1:(length(K)-1)) {
neigh[i+1, i] <- 1
neigh[i, i+1] <- 1
}
image(neigh)
n.neigh <- rowSums(neigh) + colSums(neigh)
n.neigh
N0 <- c(1, rep(0, n.pob-1))
time = 25
N0
N[, 1] <- N0
N[, 1] <- N0
N
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
N
i=2
E <- N[, i-1] * mig
E
E %*% neigh
I <- E %*% neigh / n.neigh
I
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
library(animation)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
)
plot(1:25, N[1, ], type = "l")
K[1]
plot(1:25, N[2, ], type = "l")
K[2]
plot(1:25, N[3, ], type = "l")
image(matrix(K, 3, 3))
neigh <- matrix(0, n.pob, n.pob)
for(i in 1:(length(K)-1)){
neigh[i+1, i] <- 1
neigh[i, i+1] <- 1
}
image(neigh)
n.pob <- 20
K <- rpois(n.pob, 5)
K
K[1]
K[10]
sample(1:20, 5)
sample(1:20, 5)
for(i in 2:time){
E <- N[, i-1] * mig
ne <- neigh
ne[sample(1:20, 5), sample(1:20, 5)] <- 1
n.neigh <- rowSums(ne) + colSums(ne)
I <- E %*% ne / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
neigh <- matrix(0, n.pob, n.pob)
neigh
for(i in 2:time){
E <- N[, i-1] * mig
ne <- neigh
ne[sample(1:20, 5), sample(1:20, 5)] <- 1
n.neigh <- rowSums(ne) + colSums(ne)
I <- E %*% ne / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 20
K <- rpois(n.pob, 5)
neigh <- matrix(0, n.pob, n.pob)
image(neigh)
n.neigh <- rowSums(neigh) + colSums(neigh)
N0 <- c(1, rep(0, n.pob-1))
time = 25
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
for(i in 2:time){
E <- N[, i-1] * mig
ne <- neigh
ne[sample(1:20, 5), sample(1:20, 5)] <- 1
n.neigh <- rowSums(ne) + colSums(ne)
I <- E %*% ne / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
saveGIF(
for(i in 1:time){image(matrix(N[, i], 5, 4), main = i)}
)
for(i in 2:time){
E <- N[, i-1] * mig
ne <- neigh
ne[sample(1:20, 5), sample(1:20, 5)] <- 1
n.neigh <- rowSums(ne) + colSums(ne)
I <- E %*% ne / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
for(i in 2:time){
E <- N[, i-1] * mig
ne <- neigh
ne[sample(1:20, 5), sample(1:20, 5)] <- 1
n.neigh <- rowSums(ne) + colSums(ne)
I <- E %*% ne / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
saveGIF(
for(i in 1:time){image(matrix(N[, i], 5, 4), main = i)}
)
for(i in 2:time){
E <- N[, i-1] * mig
ne <- neigh
ne[sample(1:20, 5), sample(1:20, 5)] <- 1
n.neigh <- rowSums(ne) + colSums(ne)
I <- E %*% ne / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
saveGIF(
for(i in 1:time){image(matrix(N[, i], 5, 4), main = i)}
)
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 20
K <- rpois(n.pob, 5)
neigh <- matrix(0, n.pob, n.pob)
image(neigh)
n.neigh <- rowSums(neigh) + colSums(neigh)
neigh
n.pob <- 9
K <- rpois(n.pob, 5)
neigh <- matrix(0, n.pob, n.pob)
neigh
image(matrix(K, 3, 3))
image(matrix(K, 3, 3))
r <- 0.5; mig = 0.15
set.seed(123)
n.pob <- 9
K <- rpois(n.pob, 5)
image(matrix(K, 3, 3))
library(raster)
neigh <- matrix(c(0, 1, 0, 1, rep(0, 5),
1, 0, 1, 0, 1, rep(0, 4),
0, 1, 0, 0, 0, 1, rep(0, 3),
1, 0, 0, 0, 1, 0, 1, 0, 1,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 0,
0, 0, 0, 0, 0, 1, 0, 1, 9), 9, 9)
image(neigh)
n.neigh <- rowSums(neigh) + colSums(neigh)
n.neigh
neigh <- matrix(c(0, 1, 0, 1, rep(0, 5),
1, 0, 1, 0, 1, rep(0, 4),
0, 1, 0, 0, 0, 1, rep(0, 3),
1, 0, 0, 0, 1, 0, 1, 0, 1,
0, 1, 0, 1, 0, 1, 0, 1, 0,
0, 0, 1, 0, 1, 0, 0, 0, 1,
0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 1, 0, 1, 0, 0,
0, 0, 0, 0, 0, 1, 0, 1, 0), 9, 9)
image(neigh)
n.neigh <- rowSums(neigh) + colSums(neigh)
n.neigh
n.neigh <- rowSums(neigh)
n.neigh
N0 <- c(1, rep(0, n.pob-1))
N0
time = 25
N <- matrix(0, nrow = n.pob, ncol = time)
N[, 1] <- N0
for(i in 2:time){
E <- N[, i-1] * mig
I <- E %*% neigh / n.neigh
N[, i] <- N[, i-1 ] + r * N[, i-1] * (1- N[, i-1]/K) - E + I
}
library(animation)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 5, 4), main = i)}
)
saveGIF(
for(i in 1:time){image(matrix(N[, i], 3, 3), main = i)}
)
saveGIF(
for(i in 1:25)plot(1:25, N[i, ], type = "l")
)
saveGIF(
for(i in 1:9)plot(1:25, N[i, ], type = "l")
)
saveGIF(
for(i in 1:9)plot(1:25, N[i, ], type = "l", main = i)
)
