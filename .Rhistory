x <- 0:14
y <- c(773,420,208,139,106,67,44,31,22,12,7,3,2,2,2,1)
plot(x, y)
length(x)
length(y)
x <- 0:15
plot(x, y)
x <- c(0,63,124,184,215,264,278,292,306,320,334,348,362)
length(x)
y <- c(996,668,295,190,176,172,167,159,154,147,105,22,0)
plot(x, y)
plot(x, y, col = "red", pch = 20, xlab = "Edad", y = expression(l[x]))
length(x)
length(y)
plot(x, y, col = "red", pch = 20, xlab = "Edad", y = expression(l[x]))
plot(x, y, col = "red", pch = 20, xlab = "Edad")
lines(x, y, col = "red")
plot(x, y, col = "red", pch = 20, xlab = "Edad", y = "Número de supervivientes")
plot(x, y, col = "red", pch = 20, xlab = "Edad", ylab = "Número de supervivientes")
lines(x, y, col = "red")
plot(x, log10(y), col = "red", pch = 20, xlab = "Edad", ylab = "Número de supervivientes")
lines(x, log10(y))
lines(x, log10(y), col = "red")
plot(x, log10(y), col = "red", pch = 20, xlab = "Edad", ylab = "Número de supervivientes")
lines(x, log10(y), col = "red")
plot(x, log10(y), col = "red", pch = 20, xlab = "Edad", ylab = "log Número de supervivientes")
lines(x, log10(y), col = "red")
## Matrices de proyección poblacional
s01 <- 0.5; s12 <- 0.5; s23 <- 0.5; s34 <- 0.5; s45 <- 0.5
f3 <- 3; f4 <- 2; f5 <- 1
A <- matrix(c(0,   0, s01*f3, s01*f4, s01*f5,
s12, 0, 0 ,     0,      0,
0,  s23,0,      0,      0,
0,  0,  s34,    0,      0,
0,  0,  0,      s45,    0), byrow = T, ncol = 5)
A
N0 <- c(0, 0, 10, 10, 10)
N <- matrix(0, ncol = 25, nrow = 5)
N[, 1] <- N0
for(t in 1:24){
N[, t+1] <- N[, t] %*% A
}
matplot(t(N))
f3 <- 5; f4 <- 4; f5 <- 3
A <- matrix(c(0,   0, s01*f3, s01*f4, s01*f5,
s12, 0, 0 ,     0,      0,
0,  s23,0,      0,      0,
0,  0,  s34,    0,      0,
0,  0,  0,      s45,    0), byrow = T, ncol = 5)
N0 <- c(0, 0, 10, 10, 10)
N <- matrix(0, ncol = 25, nrow = 5)
N[, 1] <- N0
for(t in 1:24){
N[, t+1] <- N[, t] %*% A
}
matplot(t(N))
N.df <- data.frame(t(N))
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("reshape2")
N.df.m <- reshape2::melt(N.df)
N.df.m
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df.m <- reshape2::melt(N.df)
N.df.m
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:15
N.df$Tiempo <- 1:25
N.df.m <- reshape2::melt(N.df, id.vars = "Tiempo")
N.df.m
ggplot(N.df.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
library(ggplot2)
library(ggplot2)
## Matrices de proyección poblacional
s01 <- 0.5; s12 <- 0.5; s23 <- 0.5; s34 <- 0.5; s45 <- 0.5
f3 <- 5; f4 <- 4; f5 <- 3
A <- matrix(c(0,   0, s01*f3, s01*f4, s01*f5,
s12, 0, 0 ,     0,      0,
0,  s23,0,      0,      0,
0,  0,  s34,    0,      0,
0,  0,  0,      s45,    0), byrow = T, ncol = 5)
N0 <- c(0, 0, 10, 10, 10)
N <- matrix(0, ncol = 25, nrow = 5)
N[, 1] <- N0
for(t in 1:24){
N[, t+1] <- N[, t] %*% A
}
library(ggplot2)
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:25
N.df.m <- reshape2::melt(N.df, id.vars = "Tiempo")
ggplot(N.df.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
## Matrices de proyección poblacional
s01 <- 0.5; s12 <- 0.5; s23 <- 0.5; s34 <- 0.5; s45 <- 0.5
f3 <- 5; f4 <- 4; f5 <- 3
A <- matrix(c(0,   0, s01*f3, s01*f4, s01*f5,
s12, 0, 0 ,     0,      0,
0,  s23,0,      0,      0,
0,  0,  s34,    0,      0,
0,  0,  0,      s45,    0), byrow = T, ncol = 5)
N0 <- c(0, 0, 10, 10, 10)
tiempo <- 50
N <- matrix(0, ncol = tiempo, nrow = 5)
N[, 1] <- N0
for(t in 1:tiempo){
N[, t+1] <- N[, t] %*% A
}
N0 <- c(0, 0, 10, 10, 10)
tiempo <- 50
N <- matrix(0, ncol = tiempo, nrow = 5)
for(t in 1:(tiempo-1)){
N[, t+1] <- N[, t] %*% A
}
library(ggplot2)
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:tiempo
N.df.m <- reshape2::melt(N.df, id.vars = "Tiempo")
ggplot(N.df.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
tiempo <- 25
N <- matrix(0, ncol = tiempo, nrow = 5)
N[, 1] <- N0
for(t in 1:(tiempo-1)){
N[, t+1] <- N[, t] %*% A
}
library(ggplot2)
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:tiempo
N.df.m <- reshape2::melt(N.df, id.vars = "Tiempo")
ggplot(N.df.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
f3 <- 5; f4 <- 5; f5 <- 5
A <- matrix(c(0,   0, s01*f3, s01*f4, s01*f5,
s12, 0, 0 ,     0,      0,
0,  s23,0,      0,      0,
0,  0,  s34,    0,      0,
0,  0,  0,      s45,    0), byrow = T, ncol = 5)
N0 <- c(0, 0, 10, 10, 10)
tiempo <- 25
N <- matrix(0, ncol = tiempo, nrow = 5)
N[, 1] <- N0
for(t in 1:(tiempo-1)){
N[, t+1] <- N[, t] %*% A
}
library(ggplot2)
N.df <- data.frame(t(N))
names(N.df) <- c("N1", "N2", "N3", "N4", "N5")
N.df$Tiempo <- 1:tiempo
N.df.m <- reshape2::melt(N.df, id.vars = "Tiempo")
ggplot(N.df.m) + geom_line(aes(x = Tiempo, y = value, colour = variable))
knitr::opts_chunk$set(echo = TRUE)
n = rpois(10, 10)
K = sapply(n, rpois)
n = rpois(10, 10)
K = sapply(n, function(x)rpois(1, x))
K
n
k = sapply(K, function(x)rpois(1*0.3, x))
k
K
k = sapply(K, function(x)rpois(1, x*0.3))
k
n-k
n = rpois(10, 10)
K = sapply(n, function(x)rpois(1, x)) - 2
k = sapply(K, function(x)rpois(1, x*0.3))
df <- data.frame(n = n, K = K, k = k, Tiempo = 1:10)
knitr::kable(df)
n = rpois(10, 10)
K = sapply(n, function(x)rpois(1, x)) - 2
k = sapply(K, function(x)rpois(1, x*0.3))
df <- data.frame(Tiempo = 1:10, n = n, K = K, k = k)
knitr::kable(df)
